// <auto-generated />
using System;
using GARCA.Data.Managers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GARCA.DAO.Migrations
{
    [DbContext(typeof(RycContext))]
    [Migration("20230423010913_ClosedAccounts")]
    partial class ClosedAccounts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("GARCA_MODEL.Accounts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Close")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountsTypesid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("accountsTypesid");

                    b.HasIndex("categoryid")
                        .IsUnique();

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("GARCA_MODEL.AccountsTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("accountsTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoriesTypesid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("categoriesTypesid");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("GARCA_MODEL.CategoriesTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("categoriesTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.ExpirationsReminders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("done")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionsRemindersid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("transactionsRemindersid");

                    b.ToTable("expirationsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.PeriodsReminders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("periodsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.Persons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("GARCA_MODEL.Splits", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionid");

                    b.ToTable("splits");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsReminders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionid");

                    b.ToTable("splitsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.Tags", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("GARCA_MODEL.Transactions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferSplitid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionStatusid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("categoryid");

                    b.HasIndex("personid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionStatusid");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsReminders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("periodsRemindersid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferSplitid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionStatusid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("categoryid");

                    b.HasIndex("periodsRemindersid");

                    b.HasIndex("personid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionStatusid");

                    b.ToTable("transactionsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("transactionsStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.Accounts", b =>
                {
                    b.HasOne("GARCA_MODEL.AccountsTypes", "accountsTypes")
                        .WithMany("accounts")
                        .HasForeignKey("accountsTypesid");

                    b.HasOne("GARCA_MODEL.Categories", "category")
                        .WithOne("accounts")
                        .HasForeignKey("GARCA_MODEL.Accounts", "categoryid");

                    b.Navigation("accountsTypes");

                    b.Navigation("category");
                });

            modelBuilder.Entity("GARCA_MODEL.Categories", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesTypes", "categoriesTypes")
                        .WithMany("categories")
                        .HasForeignKey("categoriesTypesid");

                    b.Navigation("categoriesTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.ExpirationsReminders", b =>
                {
                    b.HasOne("GARCA_MODEL.TransactionsReminders", "transactionsReminders")
                        .WithMany()
                        .HasForeignKey("transactionsRemindersid");

                    b.Navigation("transactionsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.Splits", b =>
                {
                    b.HasOne("GARCA_MODEL.Categories", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("GARCA_MODEL.Tags", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("GARCA_MODEL.Transactions", "transaction")
                        .WithMany("splits")
                        .HasForeignKey("transactionid");

                    b.Navigation("category");

                    b.Navigation("tag");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsReminders", b =>
                {
                    b.HasOne("GARCA_MODEL.Categories", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("GARCA_MODEL.Tags", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("GARCA_MODEL.TransactionsReminders", "transaction")
                        .WithMany("splits")
                        .HasForeignKey("transactionid");

                    b.Navigation("category");

                    b.Navigation("tag");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("GARCA_MODEL.Transactions", b =>
                {
                    b.HasOne("GARCA_MODEL.Accounts", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.HasOne("GARCA_MODEL.Categories", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("GARCA_MODEL.Persons", "person")
                        .WithMany()
                        .HasForeignKey("personid");

                    b.HasOne("GARCA_MODEL.Tags", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("GARCA_MODEL.TransactionsStatus", "transactionStatus")
                        .WithMany()
                        .HasForeignKey("transactionStatusid");

                    b.Navigation("account");

                    b.Navigation("category");

                    b.Navigation("person");

                    b.Navigation("tag");

                    b.Navigation("transactionStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsReminders", b =>
                {
                    b.HasOne("GARCA_MODEL.Accounts", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.HasOne("GARCA_MODEL.Categories", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("GARCA_MODEL.PeriodsReminders", "periodsReminders")
                        .WithMany()
                        .HasForeignKey("periodsRemindersid");

                    b.HasOne("GARCA_MODEL.Persons", "person")
                        .WithMany()
                        .HasForeignKey("personid");

                    b.HasOne("GARCA_MODEL.Tags", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("GARCA_MODEL.TransactionsStatus", "transactionStatus")
                        .WithMany()
                        .HasForeignKey("transactionStatusid");

                    b.Navigation("account");

                    b.Navigation("category");

                    b.Navigation("periodsReminders");

                    b.Navigation("person");

                    b.Navigation("tag");

                    b.Navigation("transactionStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.AccountsTypes", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("GARCA_MODEL.Categories", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("GARCA_MODEL.CategoriesTypes", b =>
                {
                    b.Navigation("categories");
                });

            modelBuilder.Entity("GARCA_MODEL.Transactions", b =>
                {
                    b.Navigation("splits");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsReminders", b =>
                {
                    b.Navigation("splits");
                });
#pragma warning restore 612, 618
        }
    }
}
