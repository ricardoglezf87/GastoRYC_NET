// <auto-generated />
using System;
using GARCA.Data.Managers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GARCA.DAO.Migrations
{
    [DbContext(typeof(RycContext))]
    [Migration("20230924235657_AddIdOrigArchivedTables")]
    partial class AddIdOrigArchivedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("GARCA_MODEL.AccountsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("AccountsTypesid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountsTypesid");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<bool?>("Closed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("closed");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.HasIndex("AccountsTypesid");

                    b.HasIndex("Categoryid");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GARCA_MODEL.AccountsTypesDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("AccountsTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.CategoriesDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("CategoriesTypesid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoriesTypesid");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesTypesid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GARCA_MODEL.CategoriesTypesDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("CategoriesTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.DateCalendarDao", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<int?>("Day")
                        .HasColumnType("INTEGER")
                        .HasColumnName("day");

                    b.Property<int?>("Month")
                        .HasColumnType("INTEGER")
                        .HasColumnName("month");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.HasKey("Date");

                    b.ToTable("DateCalendar");
                });

            modelBuilder.Entity("GARCA_MODEL.ExpirationsRemindersDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<bool?>("Done")
                        .HasColumnType("INTEGER")
                        .HasColumnName("done");

                    b.Property<int?>("TransactionsRemindersid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionsRemindersid");

                    b.HasKey("Id");

                    b.HasIndex("TransactionsRemindersid");

                    b.ToTable("ExpirationsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.InvestmentProductsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER")
                        .HasColumnName("active");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<int?>("InvestmentProductsTypesid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentProductsTypesid");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT")
                        .HasColumnName("symbol");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentProductsTypesid");

                    b.ToTable("InvestmentProducts");
                });

            modelBuilder.Entity("GARCA_MODEL.InvestmentProductsPricesDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<int?>("InvestmentProductsid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentProductsid");

                    b.Property<decimal?>("Prices")
                        .HasColumnType("TEXT")
                        .HasColumnName("prices");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentProductsid");

                    b.ToTable("InvestmentProductsPrices");
                });

            modelBuilder.Entity("GARCA_MODEL.InvestmentProductsTypesDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("InvestmentProductsTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.PeriodsRemindersDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("PeriodsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.PersonsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Categoryid");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsArchivedDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<int?>("IdOriginal")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idOriginal");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("Tranferid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferid");

                    b.Property<int?>("Transactionid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionid");

                    b.HasKey("Id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Tagid");

                    b.HasIndex("Transactionid");

                    b.ToTable("SplitsArchived");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("Tranferid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferid");

                    b.Property<int?>("Transactionid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionid");

                    b.HasKey("Id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Tagid");

                    b.HasIndex("Transactionid");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsReminders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("Tranferid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferid");

                    b.Property<int?>("Transactionid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionid");

                    b.HasKey("Id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Tagid");

                    b.HasIndex("Transactionid");

                    b.ToTable("SplitsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.TagsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsArchivedDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("Accountid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountid");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT")
                        .HasColumnName("balance");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<int?>("IdOriginal")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idOriginal");

                    b.Property<bool?>("InvestmentCategory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentCategory");

                    b.Property<int?>("InvestmentProductsid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentProductsid");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<decimal?>("NumShares")
                        .HasColumnType("TEXT")
                        .HasColumnName("numShares");

                    b.Property<double?>("Orden")
                        .HasColumnType("REAL")
                        .HasColumnName("orden");

                    b.Property<int?>("Personid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("personid");

                    b.Property<decimal?>("PricesShares")
                        .HasColumnType("TEXT")
                        .HasColumnName("pricesShares");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("TranferSplitid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferSplitid");

                    b.Property<int?>("Tranferid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferid");

                    b.Property<int?>("TransactionStatusid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionStatusid");

                    b.HasKey("Id");

                    b.HasIndex("Accountid");

                    b.HasIndex("Categoryid");

                    b.HasIndex("InvestmentProductsid");

                    b.HasIndex("Personid");

                    b.HasIndex("Tagid");

                    b.HasIndex("TransactionStatusid");

                    b.ToTable("TransactionsArchived");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("Accountid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountid");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT")
                        .HasColumnName("balance");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<bool?>("InvestmentCategory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentCategory");

                    b.Property<int?>("InvestmentProductsid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("investmentProductsid");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<decimal?>("NumShares")
                        .HasColumnType("TEXT")
                        .HasColumnName("numShares");

                    b.Property<double?>("Orden")
                        .HasColumnType("REAL")
                        .HasColumnName("orden");

                    b.Property<int?>("Personid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("personid");

                    b.Property<decimal?>("PricesShares")
                        .HasColumnType("TEXT")
                        .HasColumnName("pricesShares");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("TranferSplitid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferSplitid");

                    b.Property<int?>("Tranferid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tranferid");

                    b.Property<int?>("TransactionStatusid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionStatusid");

                    b.HasKey("Id");

                    b.HasIndex("Accountid");

                    b.HasIndex("Categoryid");

                    b.HasIndex("InvestmentProductsid");

                    b.HasIndex("Personid");

                    b.HasIndex("Tagid");

                    b.HasIndex("TransactionStatusid");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsRemindersDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("Accountid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountid");

                    b.Property<decimal?>("AmountIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountIn");

                    b.Property<decimal?>("AmountOut")
                        .HasColumnType("TEXT")
                        .HasColumnName("amountOut");

                    b.Property<bool?>("AutoRegister")
                        .HasColumnType("INTEGER")
                        .HasColumnName("autoRegister");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT")
                        .HasColumnName("memo");

                    b.Property<int?>("PeriodsRemindersid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("periodsRemindersid");

                    b.Property<int?>("Personid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("personid");

                    b.Property<int?>("Tagid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tagid");

                    b.Property<int?>("TransactionStatusid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("transactionStatusid");

                    b.HasKey("Id");

                    b.HasIndex("Accountid");

                    b.HasIndex("Categoryid");

                    b.HasIndex("PeriodsRemindersid");

                    b.HasIndex("Personid");

                    b.HasIndex("Tagid");

                    b.HasIndex("TransactionStatusid");

                    b.ToTable("TransactionsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsStatusDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("TransactionsStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.VBalancebyCategoryDao", b =>
                {
                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.Property<int?>("Month")
                        .HasColumnType("INTEGER")
                        .HasColumnName("month");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoryid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT")
                        .HasColumnName("amount");

                    b.Property<int?>("CategoriesTypesid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoriesTypesid");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.HasKey("Year", "Month", "Categoryid");

                    b.ToTable("VBalancebyCategory");

                    b.ToView("VBalancebyCategory", (string)null);
                });

            modelBuilder.Entity("GARCA_MODEL.AccountsDao", b =>
                {
                    b.HasOne("GARCA_MODEL.AccountsTypesDao", "AccountsTypes")
                        .WithMany()
                        .HasForeignKey("AccountsTypesid");

                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.Navigation("AccountsTypes");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GARCA_MODEL.CategoriesDao", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesTypesDao", "CategoriesTypes")
                        .WithMany()
                        .HasForeignKey("CategoriesTypesid");

                    b.Navigation("CategoriesTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.ExpirationsRemindersDao", b =>
                {
                    b.HasOne("GARCA_MODEL.TransactionsRemindersDao", "TransactionsReminders")
                        .WithMany()
                        .HasForeignKey("TransactionsRemindersid");

                    b.Navigation("TransactionsReminders");
                });

            modelBuilder.Entity("GARCA_MODEL.InvestmentProductsDao", b =>
                {
                    b.HasOne("GARCA_MODEL.InvestmentProductsTypesDao", "InvestmentProductsTypes")
                        .WithMany()
                        .HasForeignKey("InvestmentProductsTypesid");

                    b.Navigation("InvestmentProductsTypes");
                });

            modelBuilder.Entity("GARCA_MODEL.InvestmentProductsPricesDao", b =>
                {
                    b.HasOne("GARCA_MODEL.InvestmentProductsDao", "InvestmentProducts")
                        .WithMany()
                        .HasForeignKey("InvestmentProductsid");

                    b.Navigation("InvestmentProducts");
                });

            modelBuilder.Entity("GARCA_MODEL.PersonsDao", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsArchivedDao", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsArchivedDao", "Transaction")
                        .WithMany("Splits")
                        .HasForeignKey("Transactionid");

                    b.Navigation("Category");

                    b.Navigation("Tag");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsDao", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsDao", "Transaction")
                        .WithMany("Splits")
                        .HasForeignKey("Transactionid");

                    b.Navigation("Category");

                    b.Navigation("Tag");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("GARCA_MODEL.SplitsReminders", b =>
                {
                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsRemindersDao", "Transaction")
                        .WithMany("Splits")
                        .HasForeignKey("Transactionid");

                    b.Navigation("Category");

                    b.Navigation("Tag");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsArchivedDao", b =>
                {
                    b.HasOne("GARCA_MODEL.AccountsDao", "Account")
                        .WithMany()
                        .HasForeignKey("Accountid");

                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.InvestmentProductsDao", "InvestmentProducts")
                        .WithMany()
                        .HasForeignKey("InvestmentProductsid");

                    b.HasOne("GARCA_MODEL.PersonsDao", "Person")
                        .WithMany()
                        .HasForeignKey("Personid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsStatusDao", "TransactionStatus")
                        .WithMany()
                        .HasForeignKey("TransactionStatusid");

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("InvestmentProducts");

                    b.Navigation("Person");

                    b.Navigation("Tag");

                    b.Navigation("TransactionStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsDao", b =>
                {
                    b.HasOne("GARCA_MODEL.AccountsDao", "Account")
                        .WithMany()
                        .HasForeignKey("Accountid");

                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.InvestmentProductsDao", "InvestmentProducts")
                        .WithMany()
                        .HasForeignKey("InvestmentProductsid");

                    b.HasOne("GARCA_MODEL.PersonsDao", "Person")
                        .WithMany()
                        .HasForeignKey("Personid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsStatusDao", "TransactionStatus")
                        .WithMany()
                        .HasForeignKey("TransactionStatusid");

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("InvestmentProducts");

                    b.Navigation("Person");

                    b.Navigation("Tag");

                    b.Navigation("TransactionStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsRemindersDao", b =>
                {
                    b.HasOne("GARCA_MODEL.AccountsDao", "Account")
                        .WithMany()
                        .HasForeignKey("Accountid");

                    b.HasOne("GARCA_MODEL.CategoriesDao", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("GARCA_MODEL.PeriodsRemindersDao", "PeriodsReminders")
                        .WithMany()
                        .HasForeignKey("PeriodsRemindersid");

                    b.HasOne("GARCA_MODEL.PersonsDao", "Person")
                        .WithMany()
                        .HasForeignKey("Personid");

                    b.HasOne("GARCA_MODEL.TagsDao", "Tag")
                        .WithMany()
                        .HasForeignKey("Tagid");

                    b.HasOne("GARCA_MODEL.TransactionsStatusDao", "TransactionStatus")
                        .WithMany()
                        .HasForeignKey("TransactionStatusid");

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("PeriodsReminders");

                    b.Navigation("Person");

                    b.Navigation("Tag");

                    b.Navigation("TransactionStatus");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsArchivedDao", b =>
                {
                    b.Navigation("Splits");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsDao", b =>
                {
                    b.Navigation("Splits");
                });

            modelBuilder.Entity("GARCA_MODEL.TransactionsRemindersDao", b =>
                {
                    b.Navigation("Splits");
                });
#pragma warning restore 612, 618
        }
    }
}
