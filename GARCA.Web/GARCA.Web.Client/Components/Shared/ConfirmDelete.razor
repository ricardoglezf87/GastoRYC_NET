<!-- Modal -->
<div class="modal fade" id="modalConfirmDelete" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">Confirmación Borrado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                        @onclick="() => ChangeConfirm_OnChanged(false)">
                </button>
            </div>
            <div class="modal-body">
                ¿Esta seguro que desea borrar?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => ChangeConfirm_OnChanged(false)">Cancelar</button>

                @if (processStarted)
                {
                    <button type="button" class="btn btn-danger">
                        Procesando...
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-danger" @onclick="() => ChangeConfirm_OnChanged(true)">
                        <i class="bi bi-trash-fill"></i>&nbsp; Borrar
                    </button>
                }


            </div>
        </div>
    </div>
</div>


@code {
    public bool processStarted { get; set; } = false;
    [Parameter]
    public EventCallback<bool> ChangeConfirm { get; set; }
    [Parameter]
    public bool ProcessingParentComponent { get; set; }

    protected override void OnParametersSet()
    {
        processStarted = ProcessingParentComponent;
    }

    protected async Task ChangeConfirm_OnChanged(bool valor)
    {
        if (valor)
        {
            processStarted = true;
        }
        await ChangeConfirm.InvokeAsync(valor);
    }
}
