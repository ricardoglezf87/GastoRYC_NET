// <auto-generated />
using System;
using DAOLib.Managers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAOLib.Migrations
{
    [DbContext(typeof(RYCContext))]
    [Migration("20230524135126_removeTransferReminder")]
    partial class removeTransferReminder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("DAOLib.Models.AccountsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountsTypesid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("closed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("accountsTypesid");

                    b.HasIndex("categoryid");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DAOLib.Models.AccountsTypesDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("AccountsTypes");
                });

            modelBuilder.Entity("DAOLib.Models.CategoriesDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoriesTypesid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("categoriesTypesid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DAOLib.Models.CategoriesTypesDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("CategoriesTypes");
                });

            modelBuilder.Entity("DAOLib.Models.DateCalendarDAO", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("day")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("month")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("year")
                        .HasColumnType("INTEGER");

                    b.HasKey("date");

                    b.ToTable("DateCalendar");
                });

            modelBuilder.Entity("DAOLib.Models.ExpirationsRemindersDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("done")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionsRemindersid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("transactionsRemindersid");

                    b.ToTable("ExpirationsReminders");
                });

            modelBuilder.Entity("DAOLib.Models.InvestmentProductsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("InvestmentProducts");
                });

            modelBuilder.Entity("DAOLib.Models.InvestmentProductsPricesDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("investmentProductsid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("prices")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("investmentProductsid");

                    b.ToTable("InvestmentProductsPrices");
                });

            modelBuilder.Entity("DAOLib.Models.PeriodsRemindersDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("PeriodsReminders");
                });

            modelBuilder.Entity("DAOLib.Models.PersonsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DAOLib.Models.SplitsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionid");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("DAOLib.Models.SplitsRemindersDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionid");

                    b.ToTable("SplitsReminders");
                });

            modelBuilder.Entity("DAOLib.Models.TagsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("balance")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("investmentCategory")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("investmentProductsid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("numShares")
                        .HasColumnType("TEXT");

                    b.Property<int?>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("pricesShares")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferSplitid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tranferid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionStatusid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("categoryid");

                    b.HasIndex("investmentProductsid");

                    b.HasIndex("personid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionStatusid");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsRemindersDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amountIn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("amountOut")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("autoRegister")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("memo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("periodsRemindersid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("personid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tagid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("transactionStatusid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("categoryid");

                    b.HasIndex("periodsRemindersid");

                    b.HasIndex("personid");

                    b.HasIndex("tagid");

                    b.HasIndex("transactionStatusid");

                    b.ToTable("TransactionsReminders");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsStatusDAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("TransactionsStatus");
                });

            modelBuilder.Entity("DAOLib.Models.VBalancebyCategoryDAO", b =>
                {
                    b.Property<int?>("year")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("month")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("amount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("categoriesTypesid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("category")
                        .HasColumnType("TEXT");

                    b.HasKey("year", "month", "categoryid");

                    b.ToTable("VBalancebyCategory");

                    b.ToView("VBalancebyCategory", (string)null);
                });

            modelBuilder.Entity("DAOLib.Models.AccountsDAO", b =>
                {
                    b.HasOne("DAOLib.Models.AccountsTypesDAO", "accountsTypes")
                        .WithMany()
                        .HasForeignKey("accountsTypesid");

                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.Navigation("accountsTypes");

                    b.Navigation("category");
                });

            modelBuilder.Entity("DAOLib.Models.CategoriesDAO", b =>
                {
                    b.HasOne("DAOLib.Models.CategoriesTypesDAO", "categoriesTypes")
                        .WithMany()
                        .HasForeignKey("categoriesTypesid");

                    b.Navigation("categoriesTypes");
                });

            modelBuilder.Entity("DAOLib.Models.ExpirationsRemindersDAO", b =>
                {
                    b.HasOne("DAOLib.Models.TransactionsRemindersDAO", "transactionsReminders")
                        .WithMany()
                        .HasForeignKey("transactionsRemindersid");

                    b.Navigation("transactionsReminders");
                });

            modelBuilder.Entity("DAOLib.Models.InvestmentProductsPricesDAO", b =>
                {
                    b.HasOne("DAOLib.Models.InvestmentProductsDAO", "investmentProducts")
                        .WithMany()
                        .HasForeignKey("investmentProductsid");

                    b.Navigation("investmentProducts");
                });

            modelBuilder.Entity("DAOLib.Models.PersonsDAO", b =>
                {
                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.Navigation("category");
                });

            modelBuilder.Entity("DAOLib.Models.SplitsDAO", b =>
                {
                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("DAOLib.Models.TagsDAO", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("DAOLib.Models.TransactionsDAO", "transaction")
                        .WithMany("splits")
                        .HasForeignKey("transactionid");

                    b.Navigation("category");

                    b.Navigation("tag");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("DAOLib.Models.SplitsRemindersDAO", b =>
                {
                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("DAOLib.Models.TagsDAO", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("DAOLib.Models.TransactionsRemindersDAO", "transaction")
                        .WithMany("splits")
                        .HasForeignKey("transactionid");

                    b.Navigation("category");

                    b.Navigation("tag");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsDAO", b =>
                {
                    b.HasOne("DAOLib.Models.AccountsDAO", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("DAOLib.Models.InvestmentProductsDAO", "investmentProducts")
                        .WithMany()
                        .HasForeignKey("investmentProductsid");

                    b.HasOne("DAOLib.Models.PersonsDAO", "person")
                        .WithMany()
                        .HasForeignKey("personid");

                    b.HasOne("DAOLib.Models.TagsDAO", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("DAOLib.Models.TransactionsStatusDAO", "transactionStatus")
                        .WithMany()
                        .HasForeignKey("transactionStatusid");

                    b.Navigation("account");

                    b.Navigation("category");

                    b.Navigation("investmentProducts");

                    b.Navigation("person");

                    b.Navigation("tag");

                    b.Navigation("transactionStatus");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsRemindersDAO", b =>
                {
                    b.HasOne("DAOLib.Models.AccountsDAO", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.HasOne("DAOLib.Models.CategoriesDAO", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("DAOLib.Models.PeriodsRemindersDAO", "periodsReminders")
                        .WithMany()
                        .HasForeignKey("periodsRemindersid");

                    b.HasOne("DAOLib.Models.PersonsDAO", "person")
                        .WithMany()
                        .HasForeignKey("personid");

                    b.HasOne("DAOLib.Models.TagsDAO", "tag")
                        .WithMany()
                        .HasForeignKey("tagid");

                    b.HasOne("DAOLib.Models.TransactionsStatusDAO", "transactionStatus")
                        .WithMany()
                        .HasForeignKey("transactionStatusid");

                    b.Navigation("account");

                    b.Navigation("category");

                    b.Navigation("periodsReminders");

                    b.Navigation("person");

                    b.Navigation("tag");

                    b.Navigation("transactionStatus");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsDAO", b =>
                {
                    b.Navigation("splits");
                });

            modelBuilder.Entity("DAOLib.Models.TransactionsRemindersDAO", b =>
                {
                    b.Navigation("splits");
                });
#pragma warning restore 612, 618
        }
    }
}
